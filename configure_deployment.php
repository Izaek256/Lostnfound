<?php
/**
 * Interactive Deployment Configuration Helper
 * Run this script to easily configure your multi-server deployment
 * 
 * Usage: php configure_deployment.php
 */

echo "=== Lost & Found Multi-Server Configuration Helper ===\n\n";

// Get current configuration
require_once 'deployment_config.php';

echo "Current Configuration:\n";
echo "- Deployment Mode: " . DEPLOYMENT_MODE . "\n";
echo "- ServerA IP: " . SERVERA_IP . "\n";
echo "- ServerB IP: " . SERVERB_IP . "\n";
echo "- ServerC IP: " . SERVERC_IP . "\n";
echo "- Database Host: " . DB_HOST . "\n\n";

// Ask user for deployment scenario
echo "Choose your deployment scenario:\n";
echo "1. Local Development (all servers on same computer)\n";
echo "2. Split Deployment (servers on different computers)\n";
echo "3. Custom Configuration\n";
echo "Enter choice (1-3): ";

$choice = trim(fgets(STDIN));

switch ($choice) {
    case '1':
        $mode = 'local';
        $serverA_IP = 'localhost';
        $serverB_IP = 'localhost';
        $serverC_IP = 'localhost';
        break;
        
    case '2':
        $mode = 'split';
        echo "\nEnter IP addresses for your servers:\n";
        echo "ServerA IP (Authentication): ";
        $serverA_IP = trim(fgets(STDIN));
        echo "ServerB IP (Database & Files): ";
        $serverB_IP = trim(fgets(STDIN));
        echo "ServerC IP (User Interface): ";
        $serverC_IP = trim(fgets(STDIN));
        break;
        
    case '3':
        $mode = 'production';
        echo "\nEnter IP addresses for production servers:\n";
        echo "ServerA IP: ";
        $serverA_IP = trim(fgets(STDIN));
        echo "ServerB IP: ";
        $serverB_IP = trim(fgets(STDIN));
        echo "ServerC IP: ";
        $serverC_IP = trim(fgets(STDIN));
        break;
        
    default:
        echo "Invalid choice. Exiting.\n";
        exit(1);
}

// Validate IP addresses
function validateIP($ip) {
    return ($ip === 'localhost' || filter_var($ip, FILTER_VALIDATE_IP));
}

if (!validateIP($serverA_IP) || !validateIP($serverB_IP) || !validateIP($serverC_IP)) {
    echo "Error: Invalid IP address entered.\n";
    exit(1);
}

// Generate new deployment_config.php content
$config_content = "<?php
/**
 * Deployment Configuration for Multi-Server Setup
 * Generated by configure_deployment.php on " . date('Y-m-d H:i:s') . "
 */

// ============================================
// DEPLOYMENT SCENARIOS
// ============================================

if (!defined('DEPLOYMENT_MODE')) {
    define('DEPLOYMENT_MODE', '$mode');
}

switch (DEPLOYMENT_MODE) {
    case 'local':
        define('SERVERA_IP', 'localhost');
        define('SERVERB_IP', 'localhost');
        define('SERVERC_IP', 'localhost');
        break;
        
    case 'split':
        define('SERVERA_IP', '$serverA_IP');
        define('SERVERB_IP', '$serverB_IP');
        define('SERVERC_IP', '$serverC_IP');
        break;
        
    case 'production':
        define('SERVERA_IP', '$serverA_IP');
        define('SERVERB_IP', '$serverB_IP');
        define('SERVERC_IP', '$serverC_IP');
        break;
        
    default:
        define('SERVERA_IP', 'localhost');
        define('SERVERB_IP', 'localhost');
        define('SERVERC_IP', 'localhost');
}

// ============================================
// GENERATED CONFIGURATION
// ============================================

// Database connection (all servers connect to ServerB)
define('DB_HOST', SERVERB_IP);
define('DB_NAME', 'lostfound_db');
define('DB_USER', 'root');
define('DB_PASS', 'isaacK@12345');

// API URLs
define('SERVERA_API_URL', 'http://' . SERVERA_IP . '/Lostnfound/ServerA/api');
define('SERVERB_API_URL', 'http://' . SERVERB_IP . '/Lostnfound/ServerB/api');
define('SERVERC_API_URL', 'http://' . SERVERC_IP . '/Lostnfound/ServerC/api');

// Upload URLs (ServerB hosts uploads)
define('UPLOADS_BASE_URL', 'http://' . SERVERB_IP . '/Lostnfound/ServerB/uploads/');

// Health check URLs
define('SERVERA_HEALTH_URL', 'http://' . SERVERA_IP . '/Lostnfound/ServerA/api/health.php');
define('SERVERB_HEALTH_URL', 'http://' . SERVERB_IP . '/Lostnfound/ServerB/api/health.php');
define('SERVERC_HEALTH_URL', 'http://' . SERVERC_IP . '/Lostnfound/ServerC/health.php');

// ============================================
// DEPLOYMENT VALIDATION
// ============================================

function validateDeploymentConfig() {
    \$errors = [];
    
    \$required_constants = ['SERVERA_IP', 'SERVERB_IP', 'SERVERC_IP'];
    foreach (\$required_constants as \$constant) {
        if (!defined(\$constant)) {
            \$errors[] = \"Missing required constant: \$constant\";
        }
    }
    
    \$ips = [SERVERA_IP, SERVERB_IP, SERVERC_IP];
    foreach (\$ips as \$ip) {
        if (\$ip !== 'localhost' && !filter_var(\$ip, FILTER_VALIDATE_IP)) {
            \$errors[] = \"Invalid IP address: \$ip\";
        }
    }
    
    return \$errors;
}

function getCurrentServerRole() {
    \$current_dir = basename(dirname(__FILE__));
    switch (\$current_dir) {
        case 'ServerA':
            return 'Authentication Server';
        case 'ServerB':
            return 'Database & File Server';
        case 'ServerC':
            return 'User Interface Server';
        default:
            return 'Unknown Server';
    }
}

function getDeploymentInfo() {
    return [
        'mode' => DEPLOYMENT_MODE,
        'server_role' => getCurrentServerRole(),
        'servera_ip' => SERVERA_IP,
        'serverb_ip' => SERVERB_IP,
        'serverc_ip' => SERVERC_IP,
        'database_host' => DB_HOST,
        'validation_errors' => validateDeploymentConfig()
    ];
}

// Auto-validate on include
\$validation_errors = validateDeploymentConfig();
if (!empty(\$validation_errors)) {
    error_log(\"Deployment Configuration Errors: \" . implode(', ', \$validation_errors));
}
?>";

// Write the new configuration
if (file_put_contents('deployment_config.php', $config_content)) {
    echo "\n✓ Configuration updated successfully!\n\n";
    
    echo "New Configuration:\n";
    echo "- Deployment Mode: $mode\n";
    echo "- ServerA IP: $serverA_IP\n";
    echo "- ServerB IP: $serverB_IP\n";
    echo "- ServerC IP: $serverC_IP\n";
    echo "- Database Host: $serverB_IP\n\n";
    
    echo "Next Steps:\n";
    echo "1. Copy the updated deployment_config.php to each server\n";
    echo "2. Test connectivity: php test_connectivity.php\n";
    echo "3. Check server health: visit server_health.php in browser\n";
    echo "4. Run communication test: visit test_communication.php in browser\n";
    
} else {
    echo "Error: Could not write configuration file.\n";
    exit(1);
}
?>