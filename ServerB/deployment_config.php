<?php
/**
 * Auto-generated Deployment Configuration for ServerB
 * Generated on: 2025-10-31 08:12:33
 * Deployment Mode: split - Split Deployment (2 Computers)
 * 
 * DO NOT EDIT THIS FILE MANUALLY - it will be overwritten
 * Edit deploy.php instead and run it to regenerate
 */

// ============================================
// DEPLOYMENT MODE AND SERVER INFO
// ============================================
define('DEPLOYMENT_MODE', 'split');
define('DEPLOYMENT_NAME', 'Split Deployment (2 Computers)');
define('CURRENT_SERVER', 'ServerB');

// ============================================
// SERVER IP ADDRESSES
// ============================================
define('SERVERA_IP', '192.168.72.225');
define('SERVERB_IP', '192.168.72.225');
define('SERVERC_IP', '192.168.72.170');

// ============================================
// DATABASE CONFIGURATION
// ============================================
define('DB_HOST', 'localhost');  // Local database on this server
define('DB_NAME', 'lostfound_db');
define('DB_USER', 'root');
define('DB_PASS', '');

// ============================================
// API AND SERVICE URLS
// ============================================
define('SERVERA_API_URL', 'http://192.168.72.225/Lostnfound/ServerA/api');
define('SERVERB_API_URL', 'http://192.168.72.225/Lostnfound/ServerB/api');
define('SERVERC_API_URL', 'http://192.168.72.170/Lostnfound/ServerC/api');

// Upload URLs (ServerB hosts uploads)
define('UPLOADS_BASE_URL', 'http://192.168.72.225/Lostnfound/ServerB/uploads/');

// Health check URLs
define('SERVERA_HEALTH_URL', 'http://192.168.72.225/Lostnfound/ServerA/api/health.php');
define('SERVERB_HEALTH_URL', 'http://192.168.72.225/Lostnfound/ServerB/api/health.php');
define('SERVERC_HEALTH_URL', 'http://192.168.72.170/Lostnfound/ServerC/health.php');

// ============================================
// SERVER ROLE DEFINITIONS
// ============================================
define('SERVER_ROLES', [
    'ServerA' => 'Authentication Server',
    'ServerB' => 'Database & File Server', 
    'ServerC' => 'User Interface Server'
]);

// ============================================
// DEPLOYMENT VALIDATION
// ============================================
function validateDeploymentConfig() {
    $errors = [];
    
    // Check required constants
    $required = ['SERVERA_IP', 'SERVERB_IP', 'SERVERC_IP', 'DB_HOST', 'DB_NAME'];
    foreach ($required as $constant) {
        if (!defined($constant)) {
            $errors[] = "Missing required constant: $constant";
        }
    }
    
    // Validate IP addresses
    $ips = [SERVERA_IP, SERVERB_IP, SERVERC_IP];
    foreach ($ips as $ip) {
        if ($ip !== 'localhost' && !filter_var($ip, FILTER_VALIDATE_IP)) {
            $errors[] = "Invalid IP address: $ip";
        }
    }
    
    return $errors;
}

// ============================================
// HELPER FUNCTIONS
// ============================================
function getCurrentServerRole() {
    return SERVER_ROLES[CURRENT_SERVER] ?? 'Unknown Server';
}

function getDeploymentInfo() {
    return [
        'mode' => DEPLOYMENT_MODE,
        'name' => DEPLOYMENT_NAME,
        'server' => CURRENT_SERVER,
        'server_role' => getCurrentServerRole(),
        'servera_ip' => SERVERA_IP,
        'serverb_ip' => SERVERB_IP,
        'serverc_ip' => SERVERC_IP,
        'database_host' => DB_HOST,
        'validation_errors' => validateDeploymentConfig(),
        'generated_at' => '2025-10-31 08:12:33'
    ];
}

function isLocalDeployment() {
    return DEPLOYMENT_MODE === 'local';
}

function isProductionDeployment() {
    return DEPLOYMENT_MODE === 'production';
}

// Auto-validate configuration
$validation_errors = validateDeploymentConfig();
if (!empty($validation_errors)) {
    error_log("Deployment Configuration Errors for ServerB: " . implode(', ', $validation_errors));
}

// Log deployment info
error_log("ServerB loaded deployment config: " . DEPLOYMENT_MODE . " mode");
?>